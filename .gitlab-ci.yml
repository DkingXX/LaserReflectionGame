image: gradle:5.6-jdk12

stages:
  - build
  - validate
  - test
  - code-coverage

variables:
  # Disable the Gradle daemon to ensure isolated runs of the CI pipeline.
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  script:
    gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build/
      - .gradle/

checkStyle:
  stage: validate
  script: gradle checkstyleMain checkstyleTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build/
      - .gradle/

spotBugs:
  stage: validate
  script: gradle spotbugsMain spotbugsTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build/
      - .gradle/

PMD:
  stage: validate
  script: gradle pmdMain pmdTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build/
      - .gradle/

test:
  stage: test
  script:
    gradle check

code-coverage:
  stage: code-coverage
  script:
    - gradle :core:test :core:jacocoTestCoverageVerification :core:jacocoTestReport
  after_script:
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% instructions covered" }' core/build/reports/jacoco/test/jacocoTestReport.csv
    - awk -F"," '{ instructions += $6 + $7; covered += $7 } END { print covered, "/", instructions, " branches covered"; print 100*covered/instructions, "% branches covered" }' core/build/reports/jacoco/test/jacocoTestReport.csv
  coverage: '/(\d+.\d+) % +branches covered/'
  artifacts:
    paths:
      - core/build/reports/jacoco/test/jacocoTestReport.csv
    name: $CI_JOB_NAME-$CI_COMMIT_REF_NAME
    when: always
  only:
    - master
    - dev
    - testing_code